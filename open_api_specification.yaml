openapi: "3.0.0"
info:
  version: "1.0.0"
  title: "Real Device API"
  x-last-modified: "2025-01-20"
servers:
  - url: https://api.us-west-1.saucelabs.com/rdc/v2/
    description: us-west
  - url: https://api.eu-central-1.saucelabs.com/rdc/v2/
    description: eu-central
  - url: https://api.us-east-4.saucelabs.com/rdc/v2/
    description: us-east
security:
  - basicAuth: []
paths:
  /devices/status:
    get:
      summary: "List the status of all devices"
      description: "Lists the current status of all devices. For private devices, additional details are available, including the precise state and current user. The data reflects the device state with a maximum delay of 1 second at the 99th percentile (p99)."
      tags:
        - "Device Catalog"
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  devices:
                    type: array
                    items:
                      $ref: "#/components/schemas/Device"
  /sessions:
    post:
      summary: "Allocate a device and create a new session"
      description: |
        Creates a new device session.
      tags:
        - "Session Lifecycle"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                device:
                  type: object
                  properties:
                    deviceId:
                      type: string
                      description: "The device on which to create the device session. If empty a device will be selected at random."
                      example: "iPhone_16_real"
                    os:
                      description: Filter by operating system (Android or iOS). The enum is case insensitive.
                      type: string
                      enum: [android, ios]
                      example: ios
                      required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionCreation"
        "400":
          $ref: "#/components/responses/BadRequest"
    get:
      summary: List device sessions
      description: Retrieves a list of device sessions, including pending, active and recently closed sessions.
      tags:
        - "Session Lifecycle"
      parameters:
        - name: status
          in: query
          required: false
          description: Filter out sessions returned based on status
          schema:
            $ref: "#/components/schemas/SessionStatus"

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  sessions:
                    type: array
                    items:
                      $ref: "#/components/schemas/Session"
  /sessions/{sessionId}:
    get:
      summary: Get details of a specific device session
      tags:
        - "Session Lifecycle"
      parameters:
        - name: sessionId
          in: path
          required: true
          description: The id of the device session
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Session"
        "404":
          $ref: "#/components/responses/DeviceSessionNotFound"
    delete:
      summary: Close and release a device session
      tags:
        - "Session Lifecycle"
      parameters:
        - name: sessionId
          in: path
          required: true
          description: The id of the device session
          schema:
            type: string
        - name : rebootDevice
          in: query
          required: false
          description: Perform a device reboot after session release. Only applicable for private devices.
          schema:
            $ref: "#/components/schemas/RebootDevice"
      responses:
        "200":
          $ref: "#/components/responses/CloseDeviceSession"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/DeviceSessionNotFound"

  /sessions/{sessionId}/device/openUrl:
    post:
      summary: Open a url (through browser) or a deeplink to an app
      description: "Depending on a scheme the OS will decide how to open the url. 'https:' is usually handled by the browser, 'tel:' opens the telephone. If you registered a custom scheme for your app, your app will be opened. Please note: as of this moment deeplinking is only supported for iOS, for Android we will open everything in Chrome!"
      tags:
        - "Device Interactions"
      parameters:
        - name: sessionId
          in: path
          required: true
          description: The id of the device session
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - url
              properties:
                url:
                  type: string
                  example: "https://example.com"
      responses:
        "204":
          description: Command executed successfully
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/errorSchemas/BadRequest"
                  - $ref: "#/components/errorSchemas/DeviceIsNotReady"
        "404":
          $ref: "#/components/responses/DeviceSessionNotFound"
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
      description: Basic authentication with username and access key
  responses:
    BadRequest:
      description: Bad Request
      content:
        application/problem+json:
          schema:
            type: object
            properties:
              type:
                type: string
                example: about:blank
              title:
                type: string
                example: Device does not exist.
              detail:
                type: string
                example: 'The deviceId "Samsung XR" does not exist. Please ensure you provide an existing device Id.'
    NotAuthorized:
      description: Not Authorized
      content:
        application/problem+json:
          schema:
            type: object
            properties:
              type:
                type: string
                example: about:blank
              title:
                type: string
                example: Unauthorized
              detail:
                type: string
                example: You are not authorized to view this resource.
    DeviceSessionNotFound:
      description: Not Found
      content:
        application/json:
          schema:
            type: object
            properties:
              type:
                type: string
                example: about:blank
              title:
                type: string
                example: Device session not found
              detail:
                type: string
                example: The device session '123e4567-e89b-12d3-a456-426614174000' was not found, please ensure it exists and you have access to it.
    TooManyRequests:
      description: Too many requests
      content:
        application/json:
          schema:
            type: object
            properties:
              type:
                type: string
                example: about:blank
              title:
                type: string
                example: You have been sending yoo many requests.
              detail:
                type: string
                example: You have exceeded the rate limit of 60 req/s. Please ensure you are not sending too many requests.
    BadGateway:
      description: Bad gateway
      content:
        application/json:
          schema:
            type: object
            properties:
              type:
                type: string
                example: about:blank
              title:
                type: string
                example: Bad gateway
              detail:
                type: string
                example: No listener on device. Please retry and start a new session when this issue persists.
    CloseDeviceSession:
      description: Session is closing
      content:
        application/json:
          schema:
            type: object
            properties:
              sessionId:
                $ref: "#/components/schemas/SessionId"
              status:
                $ref: "#/components/schemas/SessionStatus"
                example: CLOSING
  errorSchemas:
    DeviceIsNotReady:
      type: object
      properties:
        type:
          type: string
          example: about:blank
        title:
          type: string
          example: Device not ready.
        detail:
          type: string
          example: "You tried to interact with the device, but the state of you session is 'PENDING'. The state needs to be 'ACTIVE', if you want to interact with the device."
    BadRequest:
      type: object
      properties:
        type:
          type: string
          example: about:blank
        title:
          type: string
          example: Device does not exist.
        detail:
          type: string
          example: 'The deviceId "Samsung XR" does not exist. Please ensure you provide an existing device Id.'
  schemas:
    DeviceStatus:
      type: string
      enum:
        - "AVAILABLE"
        - "IN_USE"
        - "CLEANING"
        - "REBOOTING"
        - "MAINTENANCE"
        - "OFFLINE"
      example: "IN_USE"
      description: the current state of the device. For private devices you will se a more specific state. For public devices we present an aggregated state. If one device that shares a descriptorId is available, then the entire descriptor will be marked as available.
    Device:
      type: object
      properties:
        descriptor:
          type: string
          example: "iPhone_13_real"
        isPrivateDevice:
          type: boolean
          example: true
        status:
          $ref: "#/components/schemas/DeviceStatus"
        inUseBy:
          type: array
          items:
            type: object
            properties:
              username:
                type: string
                example: "john.smith"
            required:
              - username
      required:
        - descriptor
        - isPrivateDevice
        - status
    SessionId:
      type: string
      description: Unique id of device session
      example: "123e4567-e89b-12d3-a456-426614174000"
    Session:
      type: object
      properties:
        sessionId:
          $ref: "#/components/schemas/SessionId"
        status:
          $ref: "#/components/schemas/SessionStatus"
        device:
          type: object
          properties:
            deviceName:
              type: string
            os:
              type: string
              example: "ANDROID"
            osVersion:
              type: string
              example: "15.0"
            resolutionWidth:
              description: Screen width in pixels
              type: number
              format: int32
              example: 1080
            resolutionHeight:
              description: Screen height in pixels
              type: number
              format: int32
              example: 2340
            screenSize:
              description: Screen size in inches
              type: number
              format: int32
              example: 6
        links:
          type: object
          properties:
            ioWebsocketUrl:
              type: string
              example: "wss://api.saucelabs.com/rdc/v2/sessions/123e4567-e89b-12d3-a456-426614174000/wss/io"
            eventsWebsocketUrl:
              type: string
              example: "wss://api.saucelabs.com/rdc/v2/sessions/123e4567-e89b-12d3-a456-426614174000/wss/events"
              description: Websocket for retrieving realtime logs, device events, and some statistics
            self:
              type: string
              example: "https://api.saucelabs.com/rdc/v2/sessions/123e4567-e89b-12d3-a456-426614174000"

    SessionCreation:
      type: object
      properties:
        sessionId:
          type: string
        status:
          $ref: "#/components/schemas/SessionStatus"
    SessionStatus:
      type: string
      enum:
        - "PENDING"
        - "CREATING"
        - "ACTIVE"
        - "CLOSING"
        - "CLOSED"
        - "ERRORED"
      example: "CREATING"
    RebootDevice:
      type: boolean
      default: false